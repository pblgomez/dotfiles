# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term kitty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
#set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu dmenu_path | wofi --show run | xargs swaymsg exec --

## Autostart
exec lxsession &
exec waybind &
exec ~/.local/bin/sway_touchpad_enabled.sh &
exec redshift -m wayland &
exec mako &
exec nm-applet --indicator &


## Windows configuration
default_border pixel 2
smart_borders on
smart_gaps on
gaps inner 8
gaps outer 8

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
#output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
output * bg ~/.cache/bg fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
output eDP-1    pos 0 1080
output HDMI-A-2 pos 0 0
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
input * {
  xkb_layout "us"
  xkb_variant "altgr-intl"
  xkb_options "grp:rctrl_rshift_toggle"
  }
input "1267:12395:ELAN2301:00_04F3:306B_Touchpad" {
  tap enabled
  #middle_emulation enabled
}

#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill
    bindsym $mod+q kill
    bindsym $mod+shift+x exec xkill

    # Start your launcher
    bindsym $mod+d exec $menu
    bindsym $mod+shift+d exec rofi -show ssh

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Clipboard
    bindsym $mod+alt+c exec rofi -modi "clipboard:greenclip print" -show clipboard -run-command '{cmd}'

    # Change Themes
    bindsym $mod+alt+t exec ~/.local/bin/change_theme.sh

    # Wifi 
    bindsym ctrl+alt+w exec wofi-wifi-menu
    
    # Shutdown menu
    bindsym ctrl+alt+s exec ~/.local/bin/shutdown_menu.sh

    # Brightness
    bindsym XF86MonBrightnessUp exec 'percent=9; \
      brightnessctl s $((`brightnessctl m`*$percent/100))+; \
      notify-send "Brightness: $((`brightnessctl g`*100/`brightnessctl m`)) "%'
    bindsym XF86MonBrightnessDown exec 'percent=8; \
      brightnessctl s $((`brightnessctl m`*$percent/100))-; \
      notify-send "Brightness: $((`brightnessctl g`*100/`brightnessctl m`)) "%'

    # Audio
    bindsym XF86AudioRaiseVolume exec 'pactl set-sink-volume @DEFAULT_SINK@ +7%; \
      notify-send "Volume: $(pulsemixer --get-volume | cut -d " " -f 1) "%'
    bindsym XF86AudioLowerVolume exec 'pactl set-sink-volume @DEFAULT_SINK@ -6%; \
      notify-send "Volume: $(pulsemixer --get-volume | cut -d " " -f 1) "%'
    bindsym XF86AudioMute exec 'pactl set-source-mute @DEFAULT_SOURCE@ toggle'
    #bindsym $mod+alt+v exec 'pactl set-source-mute @DEFAULT_SOURCE@ toggle; notify-send  $((amixer -M -D pulse get Capture | grep -o "\[on\|off" | head -n1 | grep off 1>/dev/null && echo "Mic OFF" || echo "Mic ON" ))'
    bindsym $mod+alt+v exec pactl set-source-mute @DEFAULT_SOURCE@ toggle && notify-send $(amixer -M -D pulse get Capture | grep -o '\[on\|off' | head -n1 | grep off 1>/dev/null && echo "Mic OFF" || echo "Mic ON" )

    # Reload the configuration file
    bindsym $mod+Shift+r reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Colors
#
set $fg #D8DEE9 
set $bg #2E3440 

set $color0 #000000 
set $color1 #3B4252 
set $color2 #434C5E 
set $color3 #4C566A 
set $color4 #D8DEE9 
set $color5 #E5E9F0 
set $color6 #ECEFF4 
set $color7 #8FBCBB 
set $color8 #88C0D0 
set $color9 #81A1C1 
set $color10 #5E81AC 
set $color11 #BF616A 
set $color12 #D08770 
set $color13 #EBCB8B 
set $color14 #A3BE8C 
set $color15 #B48EAD 


# class         border    backgr.   text      indicator child_border
client.focused  $color15  $color14  $color13  $color12  $color10
# Import theme first so invidual modifications can be made
#include ~/.config/sway/themes/one-light




#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    swaybar_command waybar
    #position top

    ## When the status_command prints a new line to stdout, swaybar updates.
    ## The default just shows the current date and time.
    ##status_command while date +'%Y-%m-%d %l:%M'; do sleep 1; done
    #status_command i3status

    #colors {
        #statusline $fg
        #background $bg
      ## class               border  backgr.   text
        #inactive_workspace $bg      $bg       $fg
        #focused_workspace  $fg      $color1   $color6
     #}
 }

include /etc/sway/config.d/*
